import{_ as t,c as e,o as a,a1 as s}from"./chunks/framework.CrIopIFz.js";const _=JSON.parse('{"title":"Why？How?","description":"","frontmatter":{"head":[["link",{"rel":"stylesheet","href":"https://cdn.jsdelivr.net/npm/@shoelace-style/shoelace@2.15.1/cdn/themes/light.css"}],["script",{"type":"module","src":"https://cdn.jsdelivr.net/npm/@shoelace-style/shoelace@2.15.1/cdn/shoelace.js"}]]},"headers":[],"relativePath":"why.md","filePath":"why.md"}'),o={name:"why.md"},l=s('<h1 id="why-how" tabindex="-1">Why？How? <a class="header-anchor" href="#why-how" aria-label="Permalink to &quot;Why？How?&quot;">​</a></h1><p>先来看看日常开发图表的问题：</p><ul><li><p>echarts 的配置项繁多，样式设置和各种功能设置文档都杂糅在一起，当一个开发接收到图表需求时，通常会参照“配置文档”把“样式”和“功能”配置在一起（这里就要投入一部分精力），导致每个图表动辄几十行的配置项。不利于统一管理样式和后期维护代码（由于图表是低频需求，后期维护还要投精力看文档）。</p></li><li><p>UI、开发、需求不同频。每段时间、同一个系统，出的图表需求、UI 样式可能也有少许差异（具体取决于当时需求与 UI 的主观想法）。说白了，没有统一交互、主题标准来约束。</p></li></ul><p><strong>该组件库意在规范化图表的开发过程，降低需求、UI、研发的沟通成本和研发自身的开发成本。</strong></p><h2 id="前置工作" tabindex="-1">前置工作 <a class="header-anchor" href="#前置工作" aria-label="Permalink to &quot;前置工作&quot;">​</a></h2><div class="important custom-block github-alert"><p class="custom-block-title">主题设计</p><p>UI 提前设计出 多套主题，内置在库中</p></div><p>echarts 支持<a href="https://echarts.apache.org/handbook/zh/concepts/style" target="_blank" rel="noreferrer">主题定制</a>，图表中的每一处样式基本都可以定制，因此我们可以轻松将<strong>样式</strong>与<strong>功能</strong>进行分离。所以，图表的样式始终维护在库内，业务研发无需关注样式问题。</p><p>一个团队的主题数量应该有节制，不应无限增加，每套主题尽量覆盖面广一些</p><p>比如移动端项目一套、PC 端项目一套</p><p>有些特殊场景：大屏 可以再来一套。</p><p>这样的好处就是体验一致性，用户在使用 APP 时无论到哪个页面看到的图表样式都是一致的，不会眼花缭乱。</p><p>当然，还有一些特殊场景，比如移动端内新增了一整套驾驶舱需求，要展示各类图表；这和移动端现有的主题完全是两个东西，此时可以先考虑大屏的这套主题是否满足，如果不满足，可以新增移动端-驾驶舱主题。</p><h2 id="标准流程" tabindex="-1">标准流程 <a class="header-anchor" href="#标准流程" aria-label="Permalink to &quot;标准流程&quot;">​</a></h2><div class="important custom-block github-alert"><p class="custom-block-title">1. 需求设计</p><p></p></div><p>每种图表都有各自的示例，里面涵盖了各种场景下图表展示效果。需求可以直接“截图”某个示例，更改文案作为原型。</p><ul><li>如果示例中不包含该需求所需效果，直接提需求，在库中增加（<strong>这是一个长期迭代的过程</strong>）</li><li>反之，如果已存在所需效果，需严格按照该效果来</li></ul><div class="important custom-block github-alert"><p class="custom-block-title">2. UI 设计</p><p></p></div><p>前置工作中 UI 已经提供了若干主题，后续基本没有什么工作。（除了需求新提的效果）</p><div class="important custom-block github-alert"><p class="custom-block-title">3. 研发</p><p></p></div><p>开发根据对应的图表示例代码，也能快速配置中所需的图表效果。</p>',20),c=[l];function r(p,i,h,n,d,m){return a(),e("div",null,c)}const b=t(o,[["render",r]]);export{_ as __pageData,b as default};
